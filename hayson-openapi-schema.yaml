openapi: 3.0.2
info:
  title: Project Haystack data types
  version: 2.0.0
  description: https://project-haystack.org/doc/TagModel
paths: {}
components:
  schemas:
    grid:
      type: object
      additionalProperties: false
      required:
        - _kind
        - meta
      properties:
        _kind:
          type: string
          enum:
            - grid
        meta:
          $ref: "#/components/schemas/gridMeta"
        cols:
          type: array
          items:
            $ref: "#/components/schemas/gridColumn"
        rows:
          type: array
          items:
            $ref: "#/components/schemas/dict"

    gridMeta:
      allOf:
        - $ref: "#/components/schemas/dict"
      type: object
      required:
        - ver
      properties:
        ver:
          type: string
          enum:
            - "3.0"

    gridColumn:
      type: object
      additionalProperties: false
      required:
        - name
      properties:
        name:
          type: string
        meta:
          $ref: "#/components/schemas/dict"
      example: { "name": "id", "meta": { "foo": { "_kind": "marker" } } }

    dict:
      type: object
      properties:
        _kind:
          type: string
          enum:
            - dict
      additionalProperties:
        $ref: "#/components/schemas/hval"
      example: { "foo": "bar" }

    list:
      type: array
      items:
        $ref: "#/components/schemas/hval"
      example: ["foo": { "_kind": "marker" }]

    hval:
      oneOf:
        - type: string
        - type: number
        - type: boolean
        - $ref: "#/components/schemas/marker"
        - $ref: "#/components/schemas/remove"
        - $ref: "#/components/schemas/na"
        - $ref: "#/components/schemas/number"
        - $ref: "#/components/schemas/numberSpecial"
        - $ref: "#/components/schemas/symbol"
        - $ref: "#/components/schemas/ref"
        - $ref: "#/components/schemas/uri"
        - $ref: "#/components/schemas/date"
        - $ref: "#/components/schemas/time"
        - $ref: "#/components/schemas/dateTime"
        - $ref: "#/components/schemas/dict"
        - $ref: "#/components/schemas/list"
        - $ref: "#/components/schemas/grid"
        - $ref: "#/components/schemas/coord"
        - $ref: "#/components/schemas/xstr"

    marker:
      type: object
      additionalProperties: false
      required:
        - _kind
      properties:
        _kind:
          type: string
          enum:
            - marker

    remove:
      type: object
      additionalProperties: false
      required:
        - _kind
      properties:
        _kind:
          type: string
          enum:
            - remove

    na:
      type: object
      additionalProperties: false
      required:
        - _kind
      properties:
        _kind:
          type: string
          enum:
            - na

    number:
      type: object
      additionalProperties: false
      required:
        - _kind
        - val
      properties:
        _kind:
          type: string
          enum:
            - number
        val:
          type: number
        unit:
          type: string
          pattern: '^([a-zA-Z%_/$]|[\x80-\xFFFF])+$'

    numberSpecial:
      type: object
      additionalProperties: false
      required:
        - _kind
        - val
      properties:
        _kind:
          type: string
          enum:
            - number
        val:
          type: string
          enum:
            - "INF"
            - "-INF"
            - "NaN"

    uri:
      type: object
      additionalProperties: false
      required:
        - _kind
        - val
      properties:
        _kind:
          type: string
          enum:
            - uri
        val:
          type: string

    ref:
      type: object
      additionalProperties: false
      required:
        - _kind
        - val
      properties:
        _kind:
          type: string
          enum:
            - ref
        val:
          type: string
          pattern: '^[0-9a-zA-Z_:\-.~]+$'
        dis:
          type: string

    symbol:
      type: object
      additionalProperties: false
      required:
        - _kind
        - val
      properties:
        _kind:
          type: string
          enum:
            - symbol
        val:
          type: string
          pattern: '^[0-9a-zA-Z_:\-.~]+$'

    date:
      type: object
      additionalProperties: false
      required:
        - _kind
        - val
      properties:
        _kind:
          type: string
          enum:
            - date
        val:
          type: string
          format: date

    time:
      type: object
      additionalProperties: false
      required:
        - _kind
        - val
      properties:
        _kind:
          type: string
          enum:
            - time
        val:
          type: string
          pattern: '^(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(\.[0-9]+)?$'

    dateTime:
      type: object
      additionalProperties: false
      required:
        - _kind
        - val
      properties:
        _kind:
          type: string
          enum:
            - dateTime
        val:
          type: string
          pattern: '^(-?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9])T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(\\.[0-9]+)?(Z|[-+](2[0-3]|[01][0-9]):[0-5][0-9])?$'
        tz:
          type: string
          minLength: 1

    coord:
      type: object
      additionalProperties: false
      required:
        - _kind
        - lat
        - lng
      properties:
        _kind:
          type: string
          enum:
            - coord
        lat:
          type: number
        lng:
          type: number

    xstr:
      type: object
      additionalProperties: false
      required:
        - _kind
        - type
        - val
      properties:
        _kind:
          type: string
          enum:
            - xstr
        type:
          type: string
          pattern: "^[A-Z][a-zA-Z0-9_]*$"
        val:
          type: string
